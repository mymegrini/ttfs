.TH "lib/ll.h" 3 "Fri Jan 15 2016" "Version By : V. Fontaine, M.Y. Megrini, N. Scotto Di Perto" "The Tiny Toy File System" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/ll.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdint\&.h>\fP
.br
\fC#include 'error\&.h'\fP
.br
\fC#include 'block\&.h'\fP
.br
\fC#include 'utils\&.h'\fP
.br
\fC#include <time\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBd_stat\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBDD_MAX\fP   100        /***< maximum number of open disks */"
.br
.ti -1c
.RI "#define \fBD_PARTMAX\fP   10      /***< maximum number of partitions in a disk */"
.br
.ti -1c
.RI "#define \fBD_NAME_MAXLEN\fP   79  /***< disk name maximum length */"
.br
.ti -1c
.RI "#define \fBINT_SIZE\fP   4"
.br
.ti -1c
.RI "#define \fBDISKEXIST\fP(id)   ( id < \fBDD_MAX\fP && _disk[id] != NULL )"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef uint8_t \fBdisk_id\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "\fBerror\fP \fBstart_disk\fP (char *name, \fBdisk_id\fP *id)"
.br
.RI "\fIThis function associates an id number to a disk\&. \fP"
.ti -1c
.RI "\fBerror\fP \fBread_block\fP (\fBdisk_id\fP id, \fBblock\fP b, uint32_t num)"
.br
.RI "\fIThis function reads a data block from the disk\&. \fP"
.ti -1c
.RI "\fBerror\fP \fBwrite_block\fP (\fBdisk_id\fP id, \fBblock\fP b, uint32_t num)"
.br
.RI "\fIThis function writes a data block from the disk\&. \fP"
.ti -1c
.RI "\fBerror\fP \fBsync_disk\fP (\fBdisk_id\fP id)"
.br
.RI "\fIThis function flushes te buffer\&. \fP"
.ti -1c
.RI "\fBerror\fP \fBstop_disk\fP (\fBdisk_id\fP id)"
.br
.RI "\fIThis function ends the session corresponding to id\&. \fP"
.ti -1c
.RI "\fBerror\fP \fBdisk_stat\fP (\fBdisk_id\fP id, \fBd_stat\fP *stat)"
.br
.RI "\fIThis function returns basic disk information\&. \fP"
.ti -1c
.RI "\fBerror\fP \fBp_index\fP (\fBdisk_id\fP id, uint32_t partid, uint32_t *partidx)"
.br
.RI "\fIThis function returns the partition's physical index\&. \fP"
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define D_NAME_MAXLEN   79  /***< disk name maximum length */"

.PP
Definition at line 11 of file ll\&.h\&.
.SS "#define D_PARTMAX   10      /***< maximum number of partitions in a disk */"

.PP
Definition at line 10 of file ll\&.h\&.
.SS "#define DD_MAX   100        /***< maximum number of open disks */"

.PP
Definition at line 9 of file ll\&.h\&.
.SS "#define DISKEXIST(id)   ( id < \fBDD_MAX\fP && _disk[id] != NULL )"

.PP
Definition at line 14 of file ll\&.h\&.
.SS "#define INT_SIZE   4"
size of an int 
.PP
Definition at line 12 of file ll\&.h\&.
.SH "Typedef Documentation"
.PP 
.SS "typedef uint8_t \fBdisk_id\fP"
A type to represent an index of the DISK_ID array 
.PP
Definition at line 19 of file ll\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBerror\fP disk_stat (\fBdisk_id\fP id, \fBd_stat\fP * stat)"

.PP
This function returns basic disk information\&. 
.PP
\fBParameters:\fP
.RS 4
\fIid\fP Disk id 
.br
\fIstat\fP where information is stored 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns an error if encountered 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBD_WRONGID\fP
.RE
.PP
Returns disk information 
.PP
Definition at line 245 of file ll\&.c\&.
.SS "\fBerror\fP p_index (\fBdisk_id\fP id, uint32_t partid, uint32_t * partidx)"

.PP
This function returns the partition's physical index\&. 
.PP
\fBParameters:\fP
.RS 4
\fIid\fP Disk id 
.br
\fIpartid\fP partition id 
.br
\fIpartidx\fP to store partition's superblock index 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns an error if encountered 
.RE
.PP
\fBSee also:\fP
.RS 4
\fBD_WRONGID\fP 
.PP
\fBP_WRONGIDX\fP
.RE
.PP
Returns a partition superblock's index on the volume 
.PP
Definition at line 269 of file ll\&.c\&.
.SS "\fBerror\fP read_block (\fBdisk_id\fP id, \fBblock\fP b, uint32_t num)"

.PP
This function reads a data block from the disk\&. 
.PP
\fBParameters:\fP
.RS 4
\fIid\fP Disk id 
.br
\fIb\fP Block to receive data 
.br
\fInum\fP Physical block number 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns an error if encountered
.RE
.PP
Read a block from disk\&. Use a cache memory to read\&. 
.PP
Definition at line 175 of file ll\&.c\&.
.SS "\fBerror\fP start_disk (char * name, \fBdisk_id\fP * id)"

.PP
This function associates an id number to a disk\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP Name of the disk 
.br
\fIid\fP Pointer to receive the id 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns an error if encountered
.RE
.PP
Starting a disk Attribute a dynamic id to this disk Readding the block zero for starting disk
.PP
\fBParameters:\fP
.RS 4
\fIname\fP the name of the disk 
.br
\fIid\fP the dynamic id attribute to the disk at start 
.RE
.PP
\fBReturns:\fP
.RS 4
error 
.RE
.PP
strncmp(_disk[i]->hash, md5print, HASH_LEN) 
.PP
Definition at line 102 of file ll\&.c\&.
.SS "\fBerror\fP stop_disk (\fBdisk_id\fP id)"

.PP
This function ends the session corresponding to id\&. 
.PP
\fBParameters:\fP
.RS 4
\fIid\fP Disk id 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns an error if encountered
.RE
.PP
Closes an opened disk\&. Frees all associated memory
.PP
\fBSee also:\fP
.RS 4
\fBD_STOP_FAIL\fP 
.RE
.PP

.PP
Definition at line 225 of file ll\&.c\&.
.SS "\fBerror\fP sync_disk (\fBdisk_id\fP id)"

.PP
This function flushes te buffer\&. 
.PP
\fBParameters:\fP
.RS 4
\fIid\fP Disk id 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns an error if encountered
.RE
.PP
Syncronize the disk\&. Flush the cache\&. 
.PP
Definition at line 208 of file ll\&.c\&.
.SS "\fBerror\fP write_block (\fBdisk_id\fP id, \fBblock\fP b, uint32_t num)"

.PP
This function writes a data block from the disk\&. 
.PP
\fBParameters:\fP
.RS 4
\fIid\fP Disk id 
.br
\fIb\fP Block to receive data 
.br
\fInum\fP Physical block number 
.RE
.PP
\fBReturns:\fP
.RS 4
Returns an error if encountered
.RE
.PP
Write a block to a disk\&. Use a cache memory to write\&.e 
.PP
Definition at line 192 of file ll\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for The Tiny Toy File System from the source code\&.
