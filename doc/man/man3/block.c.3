.TH "lib/block.c" 3 "Fri Jan 15 2016" "Version By : V. Fontaine, M.Y. Megrini, N. Scotto Di Perto" "The Tiny Toy File System" \" -*- nroff -*-
.ad l
.nh
.SH NAME
lib/block.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'block\&.h'\fP
.br
\fC#include <stdlib\&.h>\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "\fBblock\fP \fBnew_block\fP (void)"
.br
.RI "\fIReturn a new empty block, filled by 0\&. \fP"
.ti -1c
.RI "\fBerror\fP \fBrintle\fP (uint32_t *value, \fBblock\fP b, \fBaddr\fP idx)"
.br
.RI "\fIReads an integer in little-endian from a block\&. \fP"
.ti -1c
.RI "\fBerror\fP \fBwintle\fP (uint32_t value, \fBblock\fP b, \fBaddr\fP idx)"
.br
.in -1c
.SH "Function Documentation"
.PP 
.SS "\fBblock\fP new_block (void)"

.PP
Return a new empty block, filled by 0\&. Return a pointer to a new empty\&. An empty block is full of bytes 0\&.
.PP
\fBReturns:\fP
.RS 4
block 
.RE
.PP

.PP
Definition at line 8 of file block\&.c\&.
.SS "\fBerror\fP rintle (uint32_t * value, \fBblock\fP b, \fBaddr\fP idx)"

.PP
Reads an integer in little-endian from a block\&. Reads an integer in little-endian from a block at a specified index idx and stores it in value integer pointer 
.PP
Definition at line 19 of file block\&.c\&.
.SS "\fBerror\fP wintle (uint32_t value, \fBblock\fP b, \fBaddr\fP idx)"
Writes an integer in little-endian to a block at a specified index idx and stores it in value integer pointer 
.PP
Definition at line 34 of file block\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for The Tiny Toy File System from the source code\&.
