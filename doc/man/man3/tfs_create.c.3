.TH "src/tfs_create.c" 3 "Fri Jan 15 2016" "Version By : V. Fontaine, M.Y. Megrini, N. Scotto Di Perto" "The Tiny Toy File System" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/tfs_create.c \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'error\&.h'\fP
.br
\fC#include 'block\&.h'\fP
.br
\fC#include 'utils\&.h'\fP
.br
\fC#include <string\&.h>\fP
.br
\fC#include <stdio\&.h>\fP
.br
\fC#include <fcntl\&.h>\fP
.br
\fC#include <unistd\&.h>\fP
.br
\fC#include <sys/types\&.h>\fP
.br
\fC#include <sys/stat\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include <getopt\&.h>\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBF_OWR\fP   1    /***< flag for overwrite option */"
.br
.ti -1c
.RI "#define \fBD_NAME_MAXLEN\fP   79     /***< disk name maximum length */"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBusage\fP (char *argv0, FILE *out)"
.br
.RI "\fIThis function prints the command prototype\&. \fP"
.ti -1c
.RI "void \fBcreate_disk\fP (char *name, int size, char *argv0)"
.br
.RI "\fIThis function creates and initializes a disk\&. \fP"
.ti -1c
.RI "int \fBmain\fP (int argc, char *argv[])"
.br
.RI "\fIThis function parses command line inputs and launches auxiliary functions\&. \fP"
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define D_NAME_MAXLEN   79     /***< disk name maximum length */"

.PP
Definition at line 16 of file tfs_create\&.c\&.
.SS "#define F_OWR   1    /***< flag for overwrite option */"

.PP
Definition at line 15 of file tfs_create\&.c\&.
.SH "Function Documentation"
.PP 
.SS "void create_disk (char * name, int size, char * argv0)"

.PP
This function creates and initializes a disk\&. 
.PP
\fBParameters:\fP
.RS 4
\fIname\fP containing path for the disk 
.br
\fIsize\fP of the disk 
.br
\fIargv0\fP name of the calling command 
.RE
.PP
\fBReturns:\fP
.RS 4
void
.RE
.PP
This function creates a disk <name> of size <size> and fills in the appropriate values in the description block
.PP
\fBSee also:\fP
.RS 4
\fBC_FORMAT\fP 
.PP
\fBD_OPEN_ERR\fP 
.PP
\fBD_SEEK_ERR\fP 
.PP
D_PERM_ERR 
.PP
\fBD_WRITE_ERR\fP 
.PP
\fBEXIT_SUCCESS\fP 
.RE
.PP

.PP
Definition at line 60 of file tfs_create\&.c\&.
.SS "int main (int argc, char * argv[])"

.PP
This function parses command line inputs and launches auxiliary functions\&. 
.PP
\fBParameters:\fP
.RS 4
\fIargc\fP number of command line inputs 
.br
\fIargv\fP array of command line inputs 
.RE
.PP
\fBReturns:\fP
.RS 4
int value storing the error encountered
.RE
.PP
This function parses command line inputs and options then launches the auxiliary function create_disk to create the disk with the appropriate parameters
.PP
\fBSee also:\fP
.RS 4
\fBcreate_disk\fP 
.PP
\fBanswer\fP 
.RE
.PP

.PP
Definition at line 109 of file tfs_create\&.c\&.
.SS "void usage (char * argv0, FILE * out)"

.PP
This function prints the command prototype\&. Print a message about usage of the command\&.
.PP
This command creates and initializes a new disk\&. It allocates enough memory for <size> blocks and stores <size> in the first block
.PP
\fBSee also:\fP
.RS 4
\fBC_FORMAT\fP 
.PP
\fBD_OPEN_ERR\fP 
.PP
\fBD_SEEK_ERR\fP 
.PP
\fBEXIT_SUCCESS\fP 
.RE
.PP
\fBParameters:\fP
.RS 4
\fIargv0\fP command name 
.br
\fIout\fP output stream 
.RE
.PP
\fBReturns:\fP
.RS 4
void
.RE
.PP
This function prints the command prototype to the <out> stream
.PP
\fBParameters:\fP
.RS 4
\fIargv0\fP name of the command 
.RE
.PP

.PP
Definition at line 38 of file tfs_create\&.c\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for The Tiny Toy File System from the source code\&.
